<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.devkurly.admin.dao.UserMapper">
    <select id="select" parameterType="int" resultType="UserDto">
        select
            user_id,
            user_email,
            subs_dt,
            gender,
            bryr,
            in_date,
            in_user,
            up_date,
            up_user
        from USER_TB
        where user_id = #{user_id}
    </select>
    <select id="count" resultType="int">
        SELECT count(*) FROM USER_TB
    </select>

    <delete id="deleteAll">
        DELETE FROM USER_TB
    </delete>

    <delete id="deleteForAdmin">
        DELETE FROM USER_TB WHERE user_id = #{user_id}
    </delete>
    <delete id="delete" parameterType="map">
        DELETE FROM USER_TB WHERE user_id = #{user_id}
    </delete>

    <insert id="insert" parameterType="UserDto">
        INSERT INTO USER_TB
            (pwd, user_nm, user_email)
        VALUES
            (#{pwd}, #{user_nm}, #{user_email})
    </insert>

    <select id="selectAll" resultType="UserDto">
        SELECT user_id,
               user_nm,
               user_email,
               subs_dt,
               gender,
               bryr
        FROM USER_TB
        ORDER BY subs_dt DESC, user_id DESC
    </select>


    <sql id="selectFromUser">
        SELECT user_id,
               user_nm,
               user_email,
               subs_dt,
               gender,
               bryr
        FROM USER_TB
    </sql>


    <select id="selectPage" parameterType="map" resultType="UserDto">
        SELECT user_id,
               user_nm,
               user_email,
               subs_dt,
               gender,
               bryr
        FROM USER_TB
        ORDER BY subs_dt DESC, user_id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <update id="update" parameterType="UserDto">
        UPDATE USER_TB
        SET pwd = #{pwd},
            user_nm = #{user_nm},
            user_email = #{user_email},
            up_date = now()
        WHERE user_id = #{user_id}
        ORDER BY user_id DESC
    </update>


    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND title LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="W"'>
                AND writer LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND (title LIKE concat('%', #{keyword}, '%')
                OR content LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>

<!--    <update id="increaseViewCnt" parameterType="int">-->
<!--        UPDATE USER_TB-->
<!--        SET   view_cnt = view_cnt + 1-->
<!--        WHERE user_id = #{user_id}-->
<!--    </update>-->

    <select id="searchSelectPage" parameterType="SearchCondition" resultType="UserDto">
        SELECT  user_id,
                user_nm,
                user_email,
                subs_dt,
                gender,
                bryr
        FROM USER_TB
        where true
        <include refid="searchCondition"/>
        ORDER BY subs_dt DESC, user_id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        FROM USER_TB
        where true
        <include refid="searchCondition"/>
    </select>

<!--    <update id="updateCommentCnt" parameterType="map">-->
<!--        UPDATE USER_TB-->
<!--        SET comment_cnt = comment_cnt + #{cnt}-->
<!--        WHERE user_id = #{user_id}-->
<!--    </update>-->
</mapper>