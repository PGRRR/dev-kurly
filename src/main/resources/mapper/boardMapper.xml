<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.devkurly.board.dao.boardMapper">
    <delete id="deleteAll">
        delete from BOARD_TB
    </delete>

    <delete id="delete" parameterType="map">
        delete
        from BOARD_TB
        where bbs_id=#{bbs_id} and pdt_id=#{pdt_id} and user_id = #{user_id}
    </delete>

    <select id="boardAllCnt" resultType="int">
        select count(*) from BOARD_TB
    </select>

    <select id="boardCount" parameterType="map" resultType="int">
        select count(*) from BOARD_TB
        where bbs_clsf_cd = #{bbs_clsf_cd} and pdt_id = #{pdt_id}
    </select>

    <select id="select" parameterType="int">
        select bbs_id,
               bbs_title,
               wrt_dt,
               user_nm
        from BOARD_TB
        where bbs_id=#{bbs_id}
    </select>

    <select id="selectCn" parameterType="int" resultType="BoardDto">
        select bbs_id, bbs_cn, in_user, up_user
        from BOARD_CONTENT_TB
        where bbs_id=#{bbs_id}
    </select>

    <select id="selectAll" resultType="BoardDto">
        select bbs_id, pdt_id, user_id, bbs_title, wrt_dt, user_nm
        from BOARD_TB
        ORDER BY bbs_id DESC ,wrt_dt DESC
    </select>
    <sql id="selectReview">
        select REVIEW_BOARD_TB.bbs_id, revw_like, revw_img, pdt_id, user_id, bbs_title, wrt_dt, user_nm, bbs_clsf_cd, notice
        from REVIEW_BOARD_TB
                 right join BOARD_TB
                            on REVIEW_BOARD_TB.bbs_id = BOARD_TB.bbs_id
        where pdt_id = #{pdt_id} and bbs_clsf_cd = #{bbs_clsf_cd}
    </sql>

    <select id="selectReviewPage" parameterType="map" resultType="BoardDto">
        <include refid="selectReview"/>
        order by notice desc, bbs_id desc, wrt_dt desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="selectReviewPageLike" parameterType="map" resultType="BoardDto">
        <include refid="selectReview"/>
        order by notice desc, revw_like desc, bbs_id desc
            limit #{offset}, #{pageSize}
    </select>

    <select id="selectInqPage" parameterType="map" resultType="BoardDto">
        select INQ_BOARD_TB.bbs_id, bbs_title, user_nm, wrt_dt, is_secret, is_replied, pdt_id, user_id, bbs_clsf_cd, notice
        from INQ_BOARD_TB
                 right join BOARD_TB
                            on INQ_BOARD_TB.bbs_id = BOARD_TB.bbs_id
        where pdt_id = #{pdt_id} and bbs_clsf_cd = #{bbs_clsf_cd}
        order by notice desc, bbs_id desc, wrt_dt desc
        limit #{offset}, #{pageSize}
    </select>

    <insert id="insert" parameterType="BoardDto">
        insert into BOARD_TB (pdt_id, user_id, bbs_title, user_nm, bbs_clsf_cd, in_user,  up_user, notice)
        values (#{pdt_id}, #{user_id},#{bbs_title}, #{user_nm},#{bbs_clsf_cd}, #{user_id}, #{user_id}, #{notice})
    </insert>

    <insert id="insertReview" parameterType="map">
        insert into REVIEW_BOARD_TB (bbs_id, in_user, up_user)
        values (#{bbs_id}, #{user_id}, #{user_id})
    </insert>

    <insert id="insertInq" parameterType="map">
        insert into INQ_BOARD_TB(bbs_id, int_user, up_user)
        values (#{bbs_id}, #{user_id}, #{user_id})
    </insert>

    <insert id="insertCn" parameterType="BoardDto">
        insert into BOARD_CONTENT_TB (bbs_id, bbs_cn, in_user, up_user)
        values (#{bbs_id}, #{bbs_cn}, #{user_id},#{user_id})
    </insert>

    <update id="update" parameterType="BoardDto">
        update BOARD_TB
        set bbs_title=#{bbs_title}, wrt_dt=now()
        where bbs_id =#{bbs_id} and user_id=#{user_id} and pdt_id = #{pdt_id}
    </update>

    <update id="updateCn" parameterType="BoardDto">
        update BOARD_CONTENT_TB
        set bbs_cn = #{bbs_cn}
        where bbs_id = #{bbs_id}
    </update>

    <update id="IsRepliedStatus" parameterType="map">
        update INQ_BOARD_TB
        set is_replied = #{replyst}
        where bbs_id = #{bbs_id}
    </update>

    <update id="IsSecretStatus" parameterType="map">
        update INQ_BOARD_TB
        set is_secret = #{is_secret}
        where bbs_id = #{bbs_id}
    </update>

    <update id="upDownLike" parameterType="map">
        update REVIEW_BOARD_TB
        set revw_like = revw_like + #{likeUpDown}
        where bbs_id = #{bbs_id}
    </update>

    <select id="selectUserLike" parameterType="BoardDto" resultType="int">
        select like_no
        from USER_LIKE_NO
        where user_id = #{user_id} and bbs_id = #{bbs_id}
    </select>

    <select id="checkLikeNoTB" parameterType="BoardDto" resultType="int">
        select count(*)
        from USER_LIKE_NO
        where user_id = #{user_id} and bbs_id = #{bbs_id}
    </select>

    <insert id="UserLikeNo" parameterType="BoardDto">
        insert into USER_LIKE_NO (user_id, bbs_id, in_user, up_user)
        values (#{user_id}, #{bbs_id}, #{user_id}, #{user_id})
    </insert>

    <update id="updateUserLikeNo" parameterType="map">
        update USER_LIKE_NO
        set like_no = #{like_no}
        where user_id = #{user_id} and bbs_id = #{bbs_id}
    </update>

    <insert id="insertAnswer" parameterType="CommentDto">
        insert into ANSWER_TB (bbs_id, inq_ans, int_user, up_user)
        values(#{bbs_id}, #{inq_ans}, #{user_id}, #{user_id})
    </insert>

    <update id="updateAnswer" parameterType="CommentDto">
        update ANSWER_TB
        set inq_ans = #{inq_ans}, ans_dt = now()
        where bbs_id = #{bbs_id}
    </update>

    <delete id="deleteAnswer" parameterType="int">
        delete
        from ANSWER_TB
        where bbs_id = #{bbs_id}
    </delete>

    <select id="selectAnswer" parameterType="int" resultType="CommentDto">
        select bbs_id ,inq_ans, ans_dt
        from ANSWER_TB
        where bbs_id = #{bbs_id}
    </select>



</mapper>