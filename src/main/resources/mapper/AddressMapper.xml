<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <mapper namespace="com.devkurly.address.dao.AddressMapper">

    <select id="count" resultType="int">
        SELECT count(*) FROM ADDRESS_TB
    </select>

    <!-- 새 배송지 추가 -->
    <insert id="minInsert" parameterType="AddressDto">
        INSERT
        INTO    ADDRESS_TB (addr_id, user_id, chk_addr,
                            deli_type, main_addr, sub_addr)
        VALUES  (#{addr_id}, #{user_id}, #{chk_addr},
                 #{deli_type}, #{main_addr}, #{sub_addr} )
    </insert>

    <insert id="insert" parameterType="AddressDto">
        INSERT
        INTO ADDRESS_TB (user_id, chk_addr, main_addr, sub_addr,
                         addr_name, addr_tel, deli_type)
        VALUES (#{user_id}, #{chk_addr}, #{main_addr}, #{sub_addr},
                #{addr_name}, #{addr_tel}, #{deli_type})
    </insert>

    <select id="listSelect" parameterType="int"  resultType="AddressDto">
        SELECT addr_id, user_id, chk_addr, ba_addr, main_addr,
               sub_addr, addr_name, addr_tel, deli_type
        FROM ADDRESS_TB
        WHERE user_id = #{user_id}
        ORDER BY chk_addr DESC
    </select>

<!--    <select id="listSelect" parameterType="int"  resultType="AddressDto">
        SELECT addr_id, user_id, chk_addr, ba_addr, main_addr,
               sub_addr, addr_name, addr_tel, deli_type
        FROM ADDRESS_TB
        ORDER BY (chk_addr is true) AND (ba_addr is true) OR (chk_addr is true) OR (ba_addr is true) DESC
        WHERE user_id = #{user_id}
    </select>
-!>

    <!- join 연습  -->
<!--    <select id="listSelect" parameterType="int"  resultType="AddressDto">-->
<!--        SELECT-->
<!--               T.addr_id, T.user_id, T.chk_addr,-->
<!--               T.main_addr, T.sub_addr, T.addr_name,-->
<!--               T.addr_tel, T.city_code, T.deli_type,-->
<!--               C.cd_name, C.cd_type_name-->
<!--        FROM-->
<!--            ADDRESS_TB T-->
<!--                INNER JOIN-->
<!--            CITY_CODE_TB C-->
<!--            ON T.city_code = C.city_code-->
<!--        WHERE user_id = #{user_id}-->
<!--    </select>-->

    <select id="updateSelect" parameterType="int" resultType="AddressDto">
        SELECT main_addr, sub_addr, addr_name, addr_tel, chk_addr
        FROM ADDRESS_TB
        WHERE addr_id =#{addr_id}
    </select>

    <update id="update" parameterType="AddressDto" >
        UPDATE ADDRESS_TB
        SET
               sub_addr = #{sub_addr},
               addr_name = #{addr_name},
               addr_tel = #{addr_tel}
        WHERE  user_id = #{user_id} AND addr_id = #{addr_id}
    </update>

    <update id="updateDef" parameterType="AddressDto">
        UPDATE ADDRESS_TB
        SET    ba_addr = #{ba_addr}
        WHERE  addr_id = #{addr_id}
    </update>

    <update id="updateDefaultFalse" parameterType="AddressDto">
        UPDATE ADDRESS_TB
        SET    ba_addr = 0
        WHERE  user_id = #{user_id}
    </update>

    <update id="updateDefaultTrue" parameterType="AddressDto">
        UPDATE ADDRESS_TB
        SET    ba_addr = 1
        WHERE  addr_id = #{addr_id} AND user_id = #{user_id}
    </update>

    <delete id="delete" parameterType="AddressDto">
        DELETE FROM ADDRESS_TB
        WHERE addr_id = #{addr_id} AND user_id = #{user_id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM ADDRESS_TB
    </delete>

    <sql id="addressTelSort">
        SELECT
            A.addr_id,
            CASE length(A.addr_tel)
                WHEN 11 THEN concat(LEFT(A.addr_tel, 3), '-', MID(A.addr_tel, 4, 4),
                                    '-', RIGHT(A.addr_tel, 4))
                WHEN 10 THEN concat(LEFT(A.addr_tel, 3), '-', MID(A.addr_tel, 4, 3),
                                    '-', RIGHT(A.addr_tel, 4))
                WHEN 9 THEN concat(LEFT(A.addr_tel, 2), '-', MID(A.addr_tel, 4, 3),
                                   '-', RIGHT(A.addr_tel, 4))
                END AS addr_tel
        FROM (
                 SELECT addr_id, REPLACE(addr_tel, '-', '') AS addr_tel
                 FROM ADDRESS_TB
             ) AS A;
    </sql>

    <sql id="addrCityType"> -- 도시 정보, 새벽배송 지원여부, 새벽배송 보여주기
        SELECT
               ADDRESS_TB.city_code, ADDRESS_TB.deli_type,
               CITY_CODE_TB.cd_name, CITY_CODE_TB.cd_type_name
        FROM
            ADDRESS_TB
                INNER JOIN
            CITY_CODE_TB
            ON ADDRESS_TB.city_code = CITY_CODE_TB.city_code;
    </sql>

    <!-- 유저의 모든 chk_addr을 false로 변경 -->
    <update id="chkUpdateF" parameterType="AddressDto">
        UPDATE ADDRESS_TB
        SET chk_addr = 0
        WHERE user_id = #{user_id}
    </update>

    <!-- 한 배송지만 chk_addr true로 변경 -->
    <update id="chkUpdateT" parameterType="AddressDto">
        UPDATE ADDRESS_TB
        SET chk_addr = 1
        WHERE user_id = #{user_id} AND addr_id = #{addr_id};
    </update>

    <select id="city">

    </select>

<!--    <sql id="case_value">-->
<!--        SELECT-->
<!--            CASE city_code-->
<!--                WHEN 1 THEN '서울'-->
<!--                WHEN 2 THEN '경기'-->
<!--                WHEN 3 THEN '인천'-->
<!--                WHEN 4 THEN '대구'-->
<!--                WHEN 5 THEN '대전'-->
<!--                WHEN 6 THEN '울산'-->
<!--                WHEN 7 THEN '부산'-->
<!--                WHEN 8 THEN '광주'-->
<!--                WHEN 14 THEN '강원도'-->
<!--                WHEN 15 THEN '충청북도'-->
<!--                WHEN 16 THEN '충청남도'-->
<!--                WHEN 17 THEN '전라북도'-->
<!--                WHEN 18 THEN '전라남도'-->
<!--                WHEN 19 THEN '경상북도'-->
<!--                WHEN 20 THEN '경상남도'-->
<!--                ELSE '잘못된 값입니다.'-->
<!--            END;-->
<!--    </sql>-->
</mapper>